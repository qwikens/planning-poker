name: Continuous Integration

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !startsWith(github.ref, 'refs/heads/main') }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PNPM_SCRIPT_PREFIX: --filter "...[origin/main]" --parallel --stream
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Restore TypeScript cache
        uses: actions/cache@v4
        with:
          path: |
            tsconfig.tsbuildinfo
            apps/*/tsconfig.tsbuildinfo
          key: ${{ runner.os }}-ts-${{ hashFiles('**/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-ts-

      - name: Check formatting and lint
        run: pnpm biome:ci

      - name: Run type check
        run: pnpm ${{ env.PNPM_SCRIPT_PREFIX }} type-check

      - name: Run build
        run: pnpm ${{ env.PNPM_SCRIPT_PREFIX }} build

      - name: Run tests
        run: pnpm ${{ env.PNPM_SCRIPT_PREFIX }} test
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: ci
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Sync Server
        run: flyctl deploy --remote-only -c fly.sync-server.toml

      - name: Deploy Web
        run: flyctl deploy --remote-only -c fly.web.toml

